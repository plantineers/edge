name: CI

on:
  push:
    branches: [main, dev, esp32-c3]
  pull_request:
    branches: [main, dev]
  merge_group:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        toolchain: [nightly]
    runs-on: ${{ matrix.os }}
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Get Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          components: rust-src
          target: riscv32imc-unknown-none-elf

      - name: Use Rust Cache
        if: ${{ runner.os == 'Linux' }}
        uses: Swatinem/rust-cache@v2.0.1

      - name: Install rust-src component
        if: ${{ runner.os == 'Linux' }}
        run: rustup component add rust-src --toolchain nightly-2023-03-09-x86_64-unknown-linux-gnu

      - name: Run cargo check --all-targets w/ -D warnings
        run: cargo check --all-targets

      - name: Run cargo check --all-targets w/ -D warnings
        run: cargo check

      - name: Run cargo doc
        if: ${{ runner.os == 'Linux' }}
        run: cargo doc --no-deps --document-private-items --all-features

      - name: Run build --release --all-features
        run: cargo build --release --all-features

      - name: Run build --release --no-default-features
        run: cargo build --release --no-default-features

  rustfmt:
    runs-on: ubuntu-20.04
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Get nightly Rust toolchain with rustfmt
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt, rust-src
          target: riscv32imc-unknown-none-elf


      - name: Run cargo fmt --all -- --check
        run: cargo fmt --all -- --check

  